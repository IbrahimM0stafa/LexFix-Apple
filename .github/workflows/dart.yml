name: iOS-ipa-build
on:
  workflow_dispatch:
jobs:
  build-ios:
    name: ðŸŽ‰ iOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64
      
      # Clean iOS build artifacts
      - run: flutter clean
        working-directory: mobileapp
      
      # Run flutter pub get inside mobileapp
      - run: flutter pub get
        working-directory: mobileapp
      
      # Check Firebase versions and potentially downgrade if needed
      - name: Check Firebase versions
        run: |
          cd mobileapp
          echo "Current Firebase dependencies:"
          grep -A 5 -B 5 firebase pubspec.yaml || echo "No Firebase dependencies found"
          
          # Temporarily downgrade Firebase versions for iOS build compatibility
          echo "Downgrading Firebase versions for iOS build..."
          sed -i '' 's/firebase_core: \^3.14.0/firebase_core: ^2.24.2/' pubspec.yaml
          sed -i '' 's/firebase_messaging: \^15.2.7/firebase_messaging: ^14.7.10/' pubspec.yaml
          sed -i '' 's/cloud_firestore: \^5.6.9/cloud_firestore: ^4.13.6/' pubspec.yaml
          sed -i '' 's/firebase_auth: \^5.6.0/firebase_auth: ^4.15.3/' pubspec.yaml
          
          echo "Updated Firebase dependencies:"
          grep firebase pubspec.yaml
      
      # Run pub get again with updated Firebase versions
      - run: flutter pub get
        working-directory: mobileapp
      
      # Remove old pods and Podfile.lock
      - run: rm -rf Pods Podfile.lock
        working-directory: mobileapp/ios
      
      # Clean CocoaPods cache
      - run: pod cache clean --all
        working-directory: mobileapp/ios
      
      # Ensure Podfile exists
      - name: Ensure Podfile exists
        run: |
          cd mobileapp/ios
          if [ ! -f Podfile ]; then
            pod init
          fi
      
      # Create a backup and modify Podfile
      - name: Configure Podfile
        run: |
          cd mobileapp/ios
          cp Podfile Podfile.backup
          
          # Set iOS platform version
          if grep -q "platform :ios" Podfile; then
            sed -i '' "s/platform :ios.*/platform :ios, '12.0'/" Podfile
          else
            echo "platform :ios, '12.0'" >> Podfile
          fi
          
          # Check if post_install hook exists and modify accordingly
          if grep -q "post_install do" Podfile; then
            echo "Post-install hook already exists, modifying..."
            # Create a new Podfile with Swift version settings
            cat > Podfile.new << 'EOF'
EOF
            # Copy everything before post_install
            sed '/post_install do/,$d' Podfile >> Podfile.new
            
            # Add our post_install block
            cat >> Podfile.new << 'EOF'
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      config.build_settings['SWIFT_VERSION'] = '5.0'
    end
  end
  flutter_additional_ios_build_settings(target)
end
EOF
            mv Podfile.new Podfile
          else
            echo "No post_install hook found, adding one..."
            echo "" >> Podfile
            echo "post_install do |installer|" >> Podfile
            echo "  installer.pods_project.targets.each do |target|" >> Podfile
            echo "    target.build_configurations.each do |config|" >> Podfile
            echo "      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'" >> Podfile
            echo "      config.build_settings['SWIFT_VERSION'] = '5.0'" >> Podfile
            echo "    end" >> Podfile
            echo "  end" >> Podfile
            echo "  flutter_additional_ios_build_settings(target)" >> Podfile
            echo "end" >> Podfile
          fi
          
          echo "=== Final Podfile content ==="
          cat Podfile
      
      # Update CocoaPods repo & install pods
      - run: pod repo update
        working-directory: mobileapp/ios
      
      - run: pod install
        working-directory: mobileapp/ios
      
      # Build iOS app (no signing)
      - run: flutter build ios --release --no-codesign
        working-directory: mobileapp
      
      # Create Payload folder
      - run: mkdir Payload
        working-directory: mobileapp/build/ios/iphoneos
      
      # Move Runner.app into Payload/
      - run: mv Runner.app Payload/
        working-directory: mobileapp/build/ios/iphoneos
      
      # Zip the Payload into an IPA
      - name: Zip output
        run: |
          cd mobileapp/build/ios/iphoneos
          zip -r FlutterIpaExport.ipa Payload
      
      # Upload IPA to GitHub release
      - name: Upload IPA to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: mobileapp/build/ios/iphoneos/FlutterIpaExport.ipa
          asset_name: FlutterIpaExport.ipa
          tag: ios-build-${{ github.run_number }}
          overwrite: true
          body: |
            ðŸŽ‰ iOS IPA build artifact for run #${{ github.run_number }}
