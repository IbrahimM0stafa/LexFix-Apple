name: CI

###############################################################################
# Triggers                                                                    #
###############################################################################
on:
  push:
    branches: [ main ]            # add more branch names if needed
    paths:
      - '**/*.dart'
      - pubspec.yaml
  pull_request:
    paths:
      - '**/*.dart'
      - pubspec.yaml
  workflow_dispatch:              # manual button for the iOS IPA build

###############################################################################
# Job 1 â€” lint & tests (runs on push / PR only)                               #
###############################################################################
jobs:
  analyze_and_test:
    if: github.event_name != 'workflow_dispatch'   # skip when you click the button
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cirruslabs/flutter:stable     # Flutter SDK pre-installed

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: flutter pub get

      - name: Static analysis
        run: flutter analyze --no-fatal-on-hints

      - name: Run tests
        run: flutter test

###############################################################################
# Job 2 â€” iOS unsigned IPA (runs only from the manual dispatch button)        #
###############################################################################
  build_ios:
    if: github.event_name == 'workflow_dispatch'   # run ONLY from the button
    runs-on: macos-latest
    needs: []                                      # independent of the first job

    steps:
      # 1â€ƒCheck out code
      - uses: actions/checkout@v3

      # 2â€ƒInstall Flutter (stable)
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      # 3â€ƒClean & resolve packages
      - name: Flutter clean / pub get
        run: |
          flutter clean
          flutter pub get
        working-directory: mobileapp

      # 4â€ƒReset Pods, enforce iOS 13
      - name: Prepare iOS folder
        run: |
          cd ios
          rm -rf Pods Podfile.lock
          [ -f Podfile ] || pod init
          if grep -q "^platform :ios" Podfile; then
            sed -i '' "s/^platform :ios.*/platform :ios, '13.0'/" Podfile
          else
            sed -i '' '1s/^/platform :ios, '\''13.0'\''\n/' Podfile
          fi
        working-directory: mobileapp

      # 5â€ƒPatch Podfile â†’ static frameworks, modular headers, Swift 5.9
      - name: Patch Podfile
        run: |
          cd mobileapp/ios

          # force static linkage
          if grep -q "use_frameworks!" Podfile; then
            sed -i '' "s/use_frameworks!.*/use_frameworks! :linkage => :static/" Podfile
          else
            sed -i '' "/target 'Runner' do/a\\
  use_frameworks! :linkage => :static" Podfile
          fi

          # add modular headers if missing
          grep -q "use_modular_headers!" Podfile || \
            sed -i '' "/use_frameworks! :linkage => :static/a\\
  use_modular_headers!" Podfile

          # replace any existing post_install
          sed -i '' '/post_install do/,/^end$/d' Podfile
          {
            echo
            echo "post_install do |installer|"
            echo "  installer.pods_project.targets.each do |t|"
            echo "    t.build_configurations.each do |c|"
            echo "      c.build_settings[\"IPHONEOS_DEPLOYMENT_TARGET\"] = \"13.0\""
            echo "      c.build_settings[\"SWIFT_VERSION\"]              = \"5.9\""
            echo "    end"
            echo "  end"
            echo "end"
          } >> Podfile

          echo "=== Final Podfile ==="
          cat Podfile

      # 6â€ƒInstall pods
      - run: pod install --repo-update
        working-directory: mobileapp/ios

      # 7â€ƒBuild unsigned release
      - run: flutter build ios --release --no-codesign
        working-directory: mobileapp

      # 8â€ƒPackage Runner.app â‡’ IPA
      - name: Package IPA
        run: |
          cd build/ios/iphoneos
          mkdir -p Payload
          mv Runner.app Payload/
          zip -r FlutterIpaExport.ipa Payload
        working-directory: mobileapp

      # 9â€ƒUpload IPA to a GitHub Release
      - name: Upload IPA to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: mobileapp/build/ios/iphoneos/FlutterIpaExport.ipa
          asset_name: FlutterIpaExport.ipa
          tag: ios-build-${{ github.run_number }}
          overwrite: true
          body: |
            ðŸŽ‰ Unsigned iOS IPA for run #${{ github.run_number }}
