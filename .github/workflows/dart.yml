name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: ðŸŽ‰ iOS Build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      # Clean iOS build artifacts
      - run: flutter clean
        working-directory: mobileapp

      # Run flutter pub get inside mobileapp
      - run: flutter pub get
        working-directory: mobileapp

      # Remove old pods and Podfile.lock
      - run: rm -rf Pods Podfile.lock
        working-directory: mobileapp/ios

      # Ensure Podfile exists
      - name: Ensure Podfile exists
        run: |
          cd mobileapp/ios
          if [ ! -f Podfile ]; then
            pod init
          fi

      # Patch Podfile to set iOS platform 12.0 and fix Firebase pod versions
      - name: Patch Podfile
        run: |
          cd mobileapp/ios

          # Set platform :ios to 12.0
          if grep -q "platform :ios" Podfile; then
            sed -i '' "s/platform :ios.*/platform :ios, '12.0'/" Podfile
          else
            sed -i '' "1i\\
platform :ios, '12.0'
            " Podfile
          fi

          # Inject Firebase pod pins inside existing post_install block
          sed -i '' "/post_install do |installer|/a\\
            \ \ installer.pod_targets.each do |pod|\\
            \ \ \ \ if pod.name.eql?('FirebaseSharedSwift')\\
            \ \ \ \ \ \ pod.version = '10.24.0'\\
            \ \ \ \ end\\
            \ \ \ \ if pod.name.eql?('FirebaseCoreInternal')\\
            \ \ \ \ \ \ pod.version = '10.24.0'\\
            \ \ \ \ end\\
            \ \ end
          " Podfile

      # Update CocoaPods repo & install pods
      - run: pod repo update
        working-directory: mobileapp/ios

      - run: pod install
        working-directory: mobileapp/ios

      # Build iOS app (no signing)
      - run: flutter build ios --release --no-codesign
        working-directory: mobileapp

      # Create Payload folder
      - run: mkdir Payload
        working-directory: mobileapp/build/ios/iphoneos

      # Move Runner.app into Payload/
      - run: mv Runner.app Payload/
        working-directory: mobileapp/build/ios/iphoneos

      # Zip the Payload into an IPA
      - name: Zip output
        run: |
          cd mobileapp/build/ios/iphoneos
          zip -r FlutterIpaExport.ipa Payload

      # Upload IPA to GitHub release
      - name: Upload IPA to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: mobileapp/build/ios/iphoneos/FlutterIpaExport.ipa
          asset_name: FlutterIpaExport.ipa
          tag: ios-build-${{ github.run_number }}
          overwrite: true
          body: |
            ðŸŽ‰ iOS IPA build artifact for run #${{ github.run_number }}
